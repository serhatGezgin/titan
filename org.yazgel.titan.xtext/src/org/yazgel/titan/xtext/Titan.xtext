grammar org.yazgel.titan.xtext.Titan with org.eclipse.xtext.common.Terminals

generate titan "http://www.yazgel.org/titan/xtext/Titan"

Module returns Module:
	{Module}
	'module'
	name=QUALIFIED_NAME
	type=InternalDSLType
	(packages+=Package (packages+=Package)*)?;

enum InternalDSLType returns InternalDSLType:
	NestedFunctions='Nested Functions';

Package returns Package:
	{Package}
	'package'
	name=QUALIFIED_NAME
	'{'
	(entities+=Entity (entities+=Entity)*)?
	'}';

Entity returns Entity:
	{Entity}
	'entity'
	name=ID (':' superEntity=[Entity|ID])?
	'{'
	(features+=Feature (features+=Feature)*)?
	'}';

Feature returns Feature:
	Reference | DataType;

Reference returns Reference:
	{Reference}
	'var'
	name=ID
	reference=[Entity|ID]
	many?=('[]')?
	('opposite' opposite=[Reference|QUALIFIED_NAME])?;

DataType returns DataType:
	{DataType}
	'var'
	name=ID
	type=DataTypes
	many?=('[]')?;

enum DataTypes returns DataTypes:
	String='String' | Integer='integer' | Boolean='boolean' | Long='long' | Double='double';

QUALIFIED_NAME:
	ID ('.' ID)*;
