/*
* generated by Xtext
*/
grammar InternalTitan;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.yazgel.titan.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.yazgel.titan.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.yazgel.titan.xtext.services.TitanGrammarAccess;

}

@parser::members {
 
 	private TitanGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TitanGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getAlternatives()); }
(rule__Reference__Alternatives)
{ after(grammarAccess.getReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleReference
entryRuleSingleReference 
:
{ before(grammarAccess.getSingleReferenceRule()); }
	 ruleSingleReference
{ after(grammarAccess.getSingleReferenceRule()); } 
	 EOF 
;

// Rule SingleReference
ruleSingleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleReferenceAccess().getGroup()); }
(rule__SingleReference__Group__0)
{ after(grammarAccess.getSingleReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiReference
entryRuleMultiReference 
:
{ before(grammarAccess.getMultiReferenceRule()); }
	 ruleMultiReference
{ after(grammarAccess.getMultiReferenceRule()); } 
	 EOF 
;

// Rule MultiReference
ruleMultiReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiReferenceAccess().getGroup()); }
(rule__MultiReference__Group__0)
{ after(grammarAccess.getMultiReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleDataType
entryRuleSingleDataType 
:
{ before(grammarAccess.getSingleDataTypeRule()); }
	 ruleSingleDataType
{ after(grammarAccess.getSingleDataTypeRule()); } 
	 EOF 
;

// Rule SingleDataType
ruleSingleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleDataTypeAccess().getGroup()); }
(rule__SingleDataType__Group__0)
{ after(grammarAccess.getSingleDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiDataType
entryRuleMultiDataType 
:
{ before(grammarAccess.getMultiDataTypeRule()); }
	 ruleMultiDataType
{ after(grammarAccess.getMultiDataTypeRule()); } 
	 EOF 
;

// Rule MultiDataType
ruleMultiDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiDataTypeAccess().getGroup()); }
(rule__MultiDataType__Group__0)
{ after(grammarAccess.getMultiDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQUALIFIED_NAME
entryRuleQUALIFIED_NAME 
:
{ before(grammarAccess.getQUALIFIED_NAMERule()); }
	 ruleQUALIFIED_NAME
{ after(grammarAccess.getQUALIFIED_NAMERule()); } 
	 EOF 
;

// Rule QUALIFIED_NAME
ruleQUALIFIED_NAME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getGroup()); }
(rule__QUALIFIED_NAME__Group__0)
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule InternalDSLType
ruleInternalDSLType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalDSLTypeAccess().getNestedFunctionsEnumLiteralDeclaration()); }
(	'Nested Functions' 
)
{ after(grammarAccess.getInternalDSLTypeAccess().getNestedFunctionsEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DataTypes
ruleDataTypes
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypesAccess().getAlternatives()); }
(rule__DataTypes__Alternatives)
{ after(grammarAccess.getDataTypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getReferenceParserRuleCall_0()); }
	ruleReference
{ after(grammarAccess.getFeatureAccess().getReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getDataTypeParserRuleCall_1()); }
	ruleDataType
{ after(grammarAccess.getFeatureAccess().getDataTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getSingleReferenceParserRuleCall_0()); }
	ruleSingleReference
{ after(grammarAccess.getReferenceAccess().getSingleReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReferenceAccess().getMultiReferenceParserRuleCall_1()); }
	ruleMultiReference
{ after(grammarAccess.getReferenceAccess().getMultiReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getSingleDataTypeParserRuleCall_0()); }
	ruleSingleDataType
{ after(grammarAccess.getDataTypeAccess().getSingleDataTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getMultiDataTypeParserRuleCall_1()); }
	ruleMultiDataType
{ after(grammarAccess.getDataTypeAccess().getMultiDataTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypesAccess().getStringEnumLiteralDeclaration_0()); }
(	'String' 
)
{ after(grammarAccess.getDataTypesAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDataTypesAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'integer' 
)
{ after(grammarAccess.getDataTypesAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDataTypesAccess().getBooleanEnumLiteralDeclaration_2()); }
(	'boolean' 
)
{ after(grammarAccess.getDataTypesAccess().getBooleanEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDataTypesAccess().getLongEnumLiteralDeclaration_3()); }
(	'long' 
)
{ after(grammarAccess.getDataTypesAccess().getLongEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getDataTypesAccess().getDoubleEnumLiteralDeclaration_4()); }
(	'double' 
)
{ after(grammarAccess.getDataTypesAccess().getDoubleEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleAction_0()); }
(

)
{ after(grammarAccess.getModuleAccess().getModuleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_1()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_2()); }
(rule__Module__NameAssignment_2)
{ after(grammarAccess.getModuleAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getTypeAssignment_3()); }
(rule__Module__TypeAssignment_3)
{ after(grammarAccess.getModuleAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_4()); }
(rule__Module__Group_4__0)?
{ after(grammarAccess.getModuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Module__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_4__0__Impl
	rule__Module__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackagesAssignment_4_0()); }
(rule__Module__PackagesAssignment_4_0)
{ after(grammarAccess.getModuleAccess().getPackagesAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackagesAssignment_4_1()); }
(rule__Module__PackagesAssignment_4_1)*
{ after(grammarAccess.getModuleAccess().getPackagesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageAction_0()); }
(

)
{ after(grammarAccess.getPackageAccess().getPackageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_1()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_2()); }
(rule__Package__NameAssignment_2)
{ after(grammarAccess.getPackageAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_4()); }
(rule__Package__Group_4__0)?
{ after(grammarAccess.getPackageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Package__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__0__Impl
	rule__Package__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getEntitiesAssignment_4_0()); }
(rule__Package__EntitiesAssignment_4_0)
{ after(grammarAccess.getPackageAccess().getEntitiesAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getEntitiesAssignment_4_1()); }
(rule__Package__EntitiesAssignment_4_1)*
{ after(grammarAccess.getPackageAccess().getEntitiesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityAction_0()); }
(

)
{ after(grammarAccess.getEntityAccess().getEntityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_3()); }
(rule__Entity__Group_3__0)?
{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_5()); }
(rule__Entity__Group_5__0)?
{ after(grammarAccess.getEntityAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Entity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getEntityAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperEntityAssignment_3_1()); }
(rule__Entity__SuperEntityAssignment_3_1)
{ after(grammarAccess.getEntityAccess().getSuperEntityAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_5__0__Impl
	rule__Entity__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_5_0()); }
(rule__Entity__FeaturesAssignment_5_0)
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_5_1()); }
(rule__Entity__FeaturesAssignment_5_1)*
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group__0__Impl
	rule__SingleReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getSingleReferenceAction_0()); }
(

)
{ after(grammarAccess.getSingleReferenceAccess().getSingleReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group__1__Impl
	rule__SingleReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getSingleReferenceAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group__2__Impl
	rule__SingleReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getNameAssignment_2()); }
(rule__SingleReference__NameAssignment_2)
{ after(grammarAccess.getSingleReferenceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group__3__Impl
	rule__SingleReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getReferenceAssignment_3()); }
(rule__SingleReference__ReferenceAssignment_3)
{ after(grammarAccess.getSingleReferenceAccess().getReferenceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group__4__Impl
	rule__SingleReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getUniqueAssignment_4()); }
(rule__SingleReference__UniqueAssignment_4)?
{ after(grammarAccess.getSingleReferenceAccess().getUniqueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getGroup_5()); }
(rule__SingleReference__Group_5__0)?
{ after(grammarAccess.getSingleReferenceAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SingleReference__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group_5__0__Impl
	rule__SingleReference__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getOppositeKeyword_5_0()); }

	'opposite' 

{ after(grammarAccess.getSingleReferenceAccess().getOppositeKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleReference__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleReference__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getOppositeAssignment_5_1()); }
(rule__SingleReference__OppositeAssignment_5_1)
{ after(grammarAccess.getSingleReferenceAccess().getOppositeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__0__Impl
	rule__MultiReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getMultiReferenceAction_0()); }
(

)
{ after(grammarAccess.getMultiReferenceAccess().getMultiReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__1__Impl
	rule__MultiReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getMultiReferenceAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__2__Impl
	rule__MultiReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getNameAssignment_2()); }
(rule__MultiReference__NameAssignment_2)
{ after(grammarAccess.getMultiReferenceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__3__Impl
	rule__MultiReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getReferenceAssignment_3()); }
(rule__MultiReference__ReferenceAssignment_3)
{ after(grammarAccess.getMultiReferenceAccess().getReferenceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__4__Impl
	rule__MultiReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getLeftSquareBracketRightSquareBracketKeyword_4()); }

	'[]' 

{ after(grammarAccess.getMultiReferenceAccess().getLeftSquareBracketRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__5__Impl
	rule__MultiReference__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getUniqueAssignment_5()); }
(rule__MultiReference__UniqueAssignment_5)?
{ after(grammarAccess.getMultiReferenceAccess().getUniqueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getGroup_6()); }
(rule__MultiReference__Group_6__0)?
{ after(grammarAccess.getMultiReferenceAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MultiReference__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group_6__0__Impl
	rule__MultiReference__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getOppositeKeyword_6_0()); }

	'opposite' 

{ after(grammarAccess.getMultiReferenceAccess().getOppositeKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiReference__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiReference__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getOppositeAssignment_6_1()); }
(rule__MultiReference__OppositeAssignment_6_1)
{ after(grammarAccess.getMultiReferenceAccess().getOppositeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group__0__Impl
	rule__SingleDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getSingleDataTypeAction_0()); }
(

)
{ after(grammarAccess.getSingleDataTypeAccess().getSingleDataTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group__1__Impl
	rule__SingleDataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getSingleDataTypeAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group__2__Impl
	rule__SingleDataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getNameAssignment_2()); }
(rule__SingleDataType__NameAssignment_2)
{ after(grammarAccess.getSingleDataTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group__3__Impl
	rule__SingleDataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getTypeAssignment_3()); }
(rule__SingleDataType__TypeAssignment_3)
{ after(grammarAccess.getSingleDataTypeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getGroup_4()); }
(rule__SingleDataType__Group_4__0)?
{ after(grammarAccess.getSingleDataTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SingleDataType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group_4__0__Impl
	rule__SingleDataType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getOppositeKeyword_4_0()); }

	'opposite' 

{ after(grammarAccess.getSingleDataTypeAccess().getOppositeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleDataType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleDataType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getOppositeAssignment_4_1()); }
(rule__SingleDataType__OppositeAssignment_4_1)
{ after(grammarAccess.getSingleDataTypeAccess().getOppositeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiDataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__0__Impl
	rule__MultiDataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getMultiDataTypeAction_0()); }
(

)
{ after(grammarAccess.getMultiDataTypeAccess().getMultiDataTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__1__Impl
	rule__MultiDataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getMultiDataTypeAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__2__Impl
	rule__MultiDataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getNameAssignment_2()); }
(rule__MultiDataType__NameAssignment_2)
{ after(grammarAccess.getMultiDataTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__3__Impl
	rule__MultiDataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getTypeAssignment_3()); }
(rule__MultiDataType__TypeAssignment_3)
{ after(grammarAccess.getMultiDataTypeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__4__Impl
	rule__MultiDataType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getLeftSquareBracketRightSquareBracketKeyword_4()); }

	'[]' 

{ after(grammarAccess.getMultiDataTypeAccess().getLeftSquareBracketRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__5__Impl
	rule__MultiDataType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getUniqueAssignment_5()); }
(rule__MultiDataType__UniqueAssignment_5)?
{ after(grammarAccess.getMultiDataTypeAccess().getUniqueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getGroup_6()); }
(rule__MultiDataType__Group_6__0)?
{ after(grammarAccess.getMultiDataTypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MultiDataType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group_6__0__Impl
	rule__MultiDataType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getOppositeKeyword_6_0()); }

	'opposite' 

{ after(grammarAccess.getMultiDataTypeAccess().getOppositeKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiDataType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiDataType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getOppositeAssignment_6_1()); }
(rule__MultiDataType__OppositeAssignment_6_1)
{ after(grammarAccess.getMultiDataTypeAccess().getOppositeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIED_NAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIED_NAME__Group__0__Impl
	rule__QUALIFIED_NAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIED_NAME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIED_NAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIED_NAME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIED_NAME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1()); }
(rule__QUALIFIED_NAME__Group_1__0)*
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QUALIFIED_NAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIED_NAME__Group_1__0__Impl
	rule__QUALIFIED_NAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIED_NAME__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQUALIFIED_NAMEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QUALIFIED_NAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QUALIFIED_NAME__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QUALIFIED_NAME__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQUALIFIED_NAMEAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Module__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameQUALIFIED_NAMEParserRuleCall_2_0()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getModuleAccess().getNameQUALIFIED_NAMEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getTypeInternalDSLTypeEnumRuleCall_3_0()); }
	ruleInternalDSLType{ after(grammarAccess.getModuleAccess().getTypeInternalDSLTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__PackagesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackagesPackageParserRuleCall_4_0_0()); }
	rulePackage{ after(grammarAccess.getModuleAccess().getPackagesPackageParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__PackagesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackagesPackageParserRuleCall_4_1_0()); }
	rulePackage{ after(grammarAccess.getModuleAccess().getPackagesPackageParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameQUALIFIED_NAMEParserRuleCall_2_0()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getPackageAccess().getNameQUALIFIED_NAMEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__EntitiesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getEntitiesEntityParserRuleCall_4_0_0()); }
	ruleEntity{ after(grammarAccess.getPackageAccess().getEntitiesEntityParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__EntitiesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getEntitiesEntityParserRuleCall_4_1_0()); }
	ruleEntity{ after(grammarAccess.getPackageAccess().getEntitiesEntityParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperEntityAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperEntityEntityCrossReference_3_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperEntityEntityIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getSuperEntityEntityIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperEntityEntityCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_5_0_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_5_1_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSingleReferenceAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__ReferenceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getReferenceEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getSingleReferenceAccess().getReferenceEntityIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getSingleReferenceAccess().getReferenceEntityIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getSingleReferenceAccess().getReferenceEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__UniqueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getUniqueUniqueKeyword_4_0()); }
(
{ before(grammarAccess.getSingleReferenceAccess().getUniqueUniqueKeyword_4_0()); }

	'unique' 

{ after(grammarAccess.getSingleReferenceAccess().getUniqueUniqueKeyword_4_0()); }
)

{ after(grammarAccess.getSingleReferenceAccess().getUniqueUniqueKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReference__OppositeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleReferenceAccess().getOppositeMultiReferenceCrossReference_5_1_0()); }
(
{ before(grammarAccess.getSingleReferenceAccess().getOppositeMultiReferenceQUALIFIED_NAMEParserRuleCall_5_1_0_1()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getSingleReferenceAccess().getOppositeMultiReferenceQUALIFIED_NAMEParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getSingleReferenceAccess().getOppositeMultiReferenceCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMultiReferenceAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__ReferenceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getReferenceEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getMultiReferenceAccess().getReferenceEntityIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getMultiReferenceAccess().getReferenceEntityIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMultiReferenceAccess().getReferenceEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__UniqueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getUniqueUniqueKeyword_5_0()); }
(
{ before(grammarAccess.getMultiReferenceAccess().getUniqueUniqueKeyword_5_0()); }

	'unique' 

{ after(grammarAccess.getMultiReferenceAccess().getUniqueUniqueKeyword_5_0()); }
)

{ after(grammarAccess.getMultiReferenceAccess().getUniqueUniqueKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiReference__OppositeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiReferenceAccess().getOppositeMultiReferenceCrossReference_6_1_0()); }
(
{ before(grammarAccess.getMultiReferenceAccess().getOppositeMultiReferenceQUALIFIED_NAMEParserRuleCall_6_1_0_1()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getMultiReferenceAccess().getOppositeMultiReferenceQUALIFIED_NAMEParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getMultiReferenceAccess().getOppositeMultiReferenceCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSingleDataTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getTypeDataTypesEnumRuleCall_3_0()); }
	ruleDataTypes{ after(grammarAccess.getSingleDataTypeAccess().getTypeDataTypesEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleDataType__OppositeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleDataTypeAccess().getOppositeMultiDataTypeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getSingleDataTypeAccess().getOppositeMultiDataTypeQUALIFIED_NAMEParserRuleCall_4_1_0_1()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getSingleDataTypeAccess().getOppositeMultiDataTypeQUALIFIED_NAMEParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getSingleDataTypeAccess().getOppositeMultiDataTypeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMultiDataTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getTypeDataTypesEnumRuleCall_3_0()); }
	ruleDataTypes{ after(grammarAccess.getMultiDataTypeAccess().getTypeDataTypesEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__UniqueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getUniqueUniqueKeyword_5_0()); }
(
{ before(grammarAccess.getMultiDataTypeAccess().getUniqueUniqueKeyword_5_0()); }

	'unique' 

{ after(grammarAccess.getMultiDataTypeAccess().getUniqueUniqueKeyword_5_0()); }
)

{ after(grammarAccess.getMultiDataTypeAccess().getUniqueUniqueKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiDataType__OppositeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiDataTypeAccess().getOppositeMultiDataTypeCrossReference_6_1_0()); }
(
{ before(grammarAccess.getMultiDataTypeAccess().getOppositeMultiDataTypeQUALIFIED_NAMEParserRuleCall_6_1_0_1()); }
	ruleQUALIFIED_NAME{ after(grammarAccess.getMultiDataTypeAccess().getOppositeMultiDataTypeQUALIFIED_NAMEParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getMultiDataTypeAccess().getOppositeMultiDataTypeCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


